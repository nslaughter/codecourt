apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "codecourt.fullname" . }}-judging-service
  labels:
    {{- include "codecourt.labels" . | nindent 4 }}
    app.kubernetes.io/component: judging-service
spec:
  replicas: {{ .Values.judgingService.replicaCount }}
  selector:
    matchLabels:
      {{- include "codecourt.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: judging-service
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "codecourt.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: judging-service
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "codecourt.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-judging-service
          securityContext:
            {{- toYaml .Values.judgingService.securityContext | nindent 12 }}
          image: "{{ .Values.judgingService.image.repository }}:{{ .Values.judgingService.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: SERVER_PORT
              value: "{{ .Values.judgingService.service.port }}"
            {{- range $key, $value := .Values.judgingService.env }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "codecourt.fullname" $ }}-judging-service-secrets
                  key: {{ $key }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.judgingService.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
